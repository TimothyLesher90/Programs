
Determines when a student can regester for classes


using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;

namespace Prog2
{
    public partial class RegForm : Form
    {
        public RegForm()
        {
            InitializeComponent();
        }

        // Find and display earliest registration time
        private void findRegTimeBtn_Click(object sender, EventArgs e)
        {
            const string SENIORDAY = "November 2"; // 1st day of registration
            const string JUNIORDAY = "November 5"; // 2nd day of registration
            const string SOPH1 = "November 6";     // 3rd day of registration
            const string SOPH2 = "November 7";     // 4th day of registration
            const string FRESH1 = "November 8";    // 5th day of registration
            const string FRESH2 = "November 9";    // 6th day of registration

            const string TIME1 = "8:30 AM";  // 1st time block
            const string TIME2 = "10:00 AM"; // 2nd time block
            const string TIME3 = "11:30 AM"; // 3rd time block
            const string TIME4 = "2:00 PM";  // 4th time block
            const string TIME5 = "4:00 PM";  // 5th time block

            string lastNameStr;       // Entered last name
            char lastNameLetterCh;    // First letter of last name, as char
            string dateStr = "Error"; // Holds date of registration
            string timeStr = "Error"; // Holds time of registration
            bool isUpperClass;        // Upperclass or not?

            lastNameStr = lastNameTxt.Text;
            if (lastNameStr.Length > 0) // Empty string?
            {
                lastNameLetterCh = lastNameStr[0];   // First char of last name

                if (char.IsLetter(lastNameLetterCh)) // Is it a letter?
                {
                    lastNameLetterCh = char.ToUpper(lastNameLetterCh); // Ensure upper case

                    isUpperClass = (seniorRBtn.Checked || juniorRBtn.Checked);

                    // Juniors and Seniors share same schedule but different days
                    if (isUpperClass)
                    {
                        if (seniorRBtn.Checked)
                            dateStr = SENIORDAY;
                        else // Must be juniors
                            dateStr = JUNIORDAY;

                        // This block of code is being replaced
                        // by range matching with arrays and loops
                        char[] lastName = { 'a', 'e', 'j', 'p', 't' }; //letters for last name
                        string[] times = { TIME5, TIME1, TIME2, TIME3, TIME4 }; //times students can register
                        bool found = false; //if letter is found
                        string lateTime = TIME5;// the latest time

                        int i = times.Length - 1;

                        //Looks for the the letter in array
                        while (i >= 'a') 
                        {
                            if(lastNameLetterCh <= lastName[i]&& found)
                            {
                                lateTime = times[i];
                                --i;
                            }
                            else
                            {
                                --i;
                            }
                        }
                        //When found it outputs date and time
                        timeStr = lateTime; 
                    }
                    // Sophomores and Freshmen
                    else // Must be soph/fresh
                    {
                        if (sophomoreRBtn.Checked)
                        {
                            // E-Q on one day
                            if ((lastNameLetterCh >= 'E') && // >= E and
                                (lastNameLetterCh <= 'Q'))   // <= Q
                                dateStr = SOPH1;
                            else // All other letters on next day
                                dateStr = SOPH2;
                        }
                        else // must be freshman
                        {
                            // E-Q on one day
                            if ((lastNameLetterCh >= 'E') && // >= E and
                                (lastNameLetterCh <= 'Q'))   // <= Q
                                dateStr = FRESH1;
                            else // All other letters on next day
                                dateStr = FRESH2;
                        }

                        // This block of code is being replaced
                        // by range matching with arrays and loops
                        char[] lastName = { 'a', 'c', 'e', 'g', 'j', 'm', 'p', 'r', 't', 'w' }; //letters for last name
                        string[] times = { TIME4, TIME5, TIME1, TIME2, TIME3, TIME4, TIME5, TIME1, TIME2, TIME3 }; //times students can register
                        string lateTime = TIME5; // the latest time
                        bool found = false; //if letter is found

                        int i = times.Length - 1; // times - 1

                        //Looks for the the letter in array
                        while (i >= 'a') 
                        {
                            if (lastNameLetterCh <= lastName[i]&& found)
                            {
                                lateTime = times[i];
                                --i;
                            }
                            else
                            {
                                --i;
                            }
                        }
                        //When found it outputs date and time
                        timeStr = lateTime; // Time output
                    }

                    // Output results
                    dateTimeLbl.Text = $"{dateStr} at {timeStr}";
                }
                else // First char not a letter
                    MessageBox.Show("Make sure last name starts with a letter");
            }
            else // Empty textbox
                MessageBox.Show("Enter a last name!");
        }
    }
}
